{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luisz\\\\OneDrive\\\\Desktop\\\\administracion de sistemas op\\\\chaty\\\\src\\\\views\\\\examples\\\\modalChat.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Person from '@material-ui/icons/PersonAddTwoTone';\nimport Input from '../../components/Input/Input.js';\nimport Mensajes from '../../components/Mensajes/Mensajes'; //import queryString from 'query-string';\n\nimport \"../../assets/css/modalchat.css\";\n\nconst ModalVideo = props => {\n  //const [carga,setCarga]=useState(false);\n  const [name, setName] = useState('me');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [trigger, setTrigger] = useState([//0 \n  [\"hi\", \"hey\", \"hello\"], //1\n  [\"how are you\", \"how are things\"], //2\n  [\"what is going on\", \"what is up\"], //3\n  [\"happy\", \"good\", \"well\", \"fantastic\", \"cool\"], //4\n  [\"bad\", \"bored\", \"tired\", \"sad\"], //5\n  [\"tell me story\", \"tell me joke\"], //6\n  [\"thanks\", \"thank you\"], //7\n  [\"bye\", \"good bye\", \"goodbye\"]]);\n  const [repply, setRepply] = useState([//0 \n  [\"Hello!\", \"Hi!\", \"Hey!\", \"Hi there!\"], //1\n  [\"Fine... how are you?\", \"Pretty well, how are you?\", \"Fantastic, how are you?\"], //2\n  [\"Nothing much\", \"Exciting things!\"], //3\n  [\"Glad to hear it\"], //4\n  [\"Why?\", \"Cheer up buddy\"], //5\n  [\"What about?\", \"Once upon a time...\"], //6\n  [\"You're welcome\", \"No problem\"], //7\n  [\"Goodbye\", \"See you later\"]]);\n\n  function compare(triggerArray, replyArray, text) {\n    //funcion 1  \n    let item;\n    let items;\n\n    for (let x = 0; x < triggerArray.length; x++) {\n      for (let y = 0; y < replyArray.length; y++) {\n        if (triggerArray[x][y] == text) {\n          items = replyArray[x];\n          item = items[Math.floor(Math.random() * items.length)];\n        }\n      }\n    }\n\n    return item;\n  }\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      setMessages(messages => [...messages, message]);\n      setMessages(messages => [...messages, {\n        user: \"Chaty\",\n        text: \"Respondiendo cualquier cosa siempre\"\n      }]); //socket.emit('sendMessage', message, () => setMessage(''));\n\n      console.log(messages);\n      setMessage({\n        user: \"me\",\n        text: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    dialogClassName: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"ChatBot\", /*#__PURE__*/React.createElement(Person, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messagebox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Mensajes, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ModalVideo;","map":{"version":3,"sources":["C:/Users/luisz/OneDrive/Desktop/administracion de sistemas op/chaty/src/views/examples/modalChat.js"],"names":["React","Fragment","useState","useEffect","Modal","Person","Input","Mensajes","ModalVideo","props","name","setName","users","setUsers","message","setMessage","messages","setMessages","trigger","setTrigger","repply","setRepply","compare","triggerArray","replyArray","text","item","items","x","length","y","Math","floor","random","sendMessage","event","preventDefault","user","console","log"],"mappings":"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","sourcesContent":["import React ,{Fragment,useState,useEffect}from 'react';\r\nimport {Modal} from 'react-bootstrap'\r\nimport Person from '@material-ui/icons/PersonAddTwoTone';\r\nimport Input from '../../components/Input/Input.js';\r\nimport Mensajes from '../../components/Mensajes/Mensajes';\r\n//import queryString from 'query-string';\r\n\r\n\r\nimport \"../../assets/css/modalchat.css\";\r\nconst ModalVideo= (props)=>{\r\n    //const [carga,setCarga]=useState(false);\r\n    const [name, setName] = useState('me');\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [trigger, setTrigger] = useState([\r\n      //0 \r\n      [\"hi\", \"hey\", \"hello\"],\r\n      //1\r\n      [\"how are you\", \"how are things\"],\r\n      //2\r\n      [\"what is going on\", \"what is up\"],\r\n      //3\r\n      [\"happy\", \"good\", \"well\", \"fantastic\", \"cool\"],\r\n      //4\r\n      [\"bad\", \"bored\", \"tired\", \"sad\"],\r\n      //5\r\n      [\"tell me story\", \"tell me joke\"],\r\n      //6\r\n      [\"thanks\", \"thank you\"],\r\n      //7\r\n      [\"bye\", \"good bye\", \"goodbye\"]\r\n      ]\r\n      );\r\n\r\n      const [repply, setRepply] = useState([\r\n        //0 \r\n        [\"Hello!\", \"Hi!\", \"Hey!\", \"Hi there!\"], \r\n        //1\r\n        [\r\n            \"Fine... how are you?\",\r\n            \"Pretty well, how are you?\",\r\n            \"Fantastic, how are you?\"\r\n          ],\r\n        //2\r\n        [\r\n            \"Nothing much\",\r\n            \"Exciting things!\"\r\n          ],\r\n        //3\r\n        [\"Glad to hear it\"],\r\n        //4\r\n        [\"Why?\", \"Cheer up buddy\"],\r\n        //5\r\n        [\"What about?\", \"Once upon a time...\"],\r\n        //6\r\n        [\"You're welcome\", \"No problem\"],\r\n        //7\r\n        [\"Goodbye\", \"See you later\"],\r\n    ]);\r\n\r\n    function compare(triggerArray, replyArray, text) {   //funcion 1  \r\n      let item;\r\n      let items;\r\n      for (let x = 0; x < triggerArray.length; x++) {\r\n          for (let y = 0; y < replyArray.length; y++) {\r\n              if (triggerArray[x][y] == text) {\r\n                items = replyArray[x];\r\n                item = items[Math.floor(Math.random() * items.length)];\r\n              }\r\n          }\r\n      }\r\n      return item;\r\n  }\r\n\r\n    const sendMessage = (event) => {\r\n      event.preventDefault();\r\n      \r\n      if(message) {\r\n        setMessages(messages => [ ...messages, message ]);\r\n        setMessages(messages => [ ...messages, {user:\"Chaty\",text:\"Respondiendo cualquier cosa siempre\"} ]);\r\n        //socket.emit('sendMessage', message, () => setMessage(''));\r\n        console.log(messages);\r\n        setMessage({user:\"me\",text:\"\"});\r\n      }\r\n    }\r\n    return (\r\n       <Modal\r\n          {...props}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered    \r\n          dialogClassName=\"modal\"  \r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              ChatBot\r\n              <Person/>\r\n            </Modal.Title>\r\n            \r\n          </Modal.Header>\r\n          <Modal.Body>  \r\n            <div className=\"messagebox\">\r\n            <Mensajes messages={messages} name={name} />\r\n            </div>\r\n          </Modal.Body>\r\n          < Modal.Footer>\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n      \r\n}\r\n\r\n\r\n\r\nexport default ModalVideo;"]},"metadata":{},"sourceType":"module"}